protocol Player {
    var name: String {get set}
    var hero: Hero {get set}
    var isAlive: Bool {get set}
    func reduceEnergy()
    var currentPosition: (Int, Int) {get set}
    func moveToPosition(position: (Int, Int))
}


protocol PlayerGenerator {
    var heroGenerator: StandartHeroGenerator {get set}
    init(heroGenerator: StandartHeroGenerator)
    func generatePlayer(name: String) -> Player
}

class StandartPlayer: Player{
    func moveToPosition(position: (Int, Int)) {
        currentPosition = position
    }
    
    var currentPosition: (Int, Int)
    
    var name: String
    
    var hero: Hero
    
    var isAlive: Bool
    
    func reduceEnergy() {
        
    }
    
    var avatar: String
    
    required init(name: String, hero: StandartHero, isAlive: Bool) {
        self.name = name
        self.hero = StandartHero(race: "", energy: 0, lifePoints: 0, weapon: nil, armor: nil)
        self.isAlive = isAlive
        self.currentPosition = (0, 0)
        self.avatar = "ü§°"
    }
    
    
}

//generating a player with name, avatar and random hero
class StandartPlayerGenerator: PlayerGenerator {
    var heroGenerator: StandartHeroGenerator
    
    required init(heroGenerator: StandartHeroGenerator) {
        self.heroGenerator = heroGenerator
    }
    
    func generatePlayer(name: String) -> Player {
        let player = StandartPlayer(name: "", hero: StandartHero(race: "", energy: 0, lifePoints: 0, weapon: nil, armor: nil), isAlive: true)
        print("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ –∏–≥—Ä–∞—á–∞: ")
        if let name = readLine() {
            player.name = name
        }
        
        chooseAvatar(player: player)
        
        print("""
            –ù–∞ —Å–ª—É—á–∞–µ–Ω –ø—Ä–∏–Ω—Ü–∏–ø —â–µ –ø–æ–ª—É—á–∏—Ç–µ –Ω—è–∫–æ–π –æ—Ç —Å–ª–µ–¥–Ω–∏—Ç–µ –≥–µ—Ä–æ–∏:
        1.Human - 100—Ç. –∂–∏–≤–æ—Ç, 10—Ç. –∞—Ç–∞–∫–∞, 20—Ç. –∑–∞—â–∏—Ç–∞, 10—Ç. –µ–Ω–µ—Ä–≥–∏—è
        2.Elf - 80—Ç. –∂–∏–≤–æ—Ç, 15. –∞—Ç–∞–∫–∞, 15—Ç. –∑–∞—â–∏—Ç–∞, 12—Ç. –µ–Ω–µ—Ä–≥–∏—è
        3.Wizard - 75—Ç. –∂–∏–≤–æ—Ç, 20—Ç. –∞—Ç–∞–∫–∞, 12—Ç. –∑–∞—â–∏—Ç–∞, 11—Ç. –µ–Ω–µ—Ä–≥–∏—è
        """)
        
        var chosenHero = heroGenerator.getRandom()
        switch chosenHero.race {
        case "human":
            chosenHero.lifePoints = 100
        case "elf":
            chosenHero.lifePoints = 80
        default:
            chosenHero.lifePoints = 75
        }
        
        let messageAboutChoice = """
        \(player.name), –≤–∏–µ —â–µ –∏–≥—Ä–∞–µ—Ç–µ –∫–∞—Ç–æ \(chosenHero.race) —Å –∞–≤–∞—Ç–∞—Ä \(player.avatar)
        –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:
        \(chosenHero.lifePoints) HP
        \(String(describing: chosenHero.weapon!.attack)) Attack Damage
        \(String(describing: chosenHero.armor!.defence)) Defence
        \(chosenHero.energy) Energy
    """
        print(messageAboutChoice)
        return player
    }
    
    func chooseAvatar(player: StandartPlayer) {
        let avatars : [String] = ["üëæ", "ü§ñ", "üëΩ", "üéÉ"]
        print("–ò–∑–±–µ—Ä–µ—Ç–µ –∞–≤–∞—Ç–∞—Ä: (")
        for i in 0..<avatars.count {
            print("press \(i): \(avatars[i])")
        }
        
        if let choice = readLine(as: Int.self) {
            if choice >= 0 && choice <= 3 {
                player.avatar = avatars[choice]
            } else {
                player.avatar = "ü§°"
            }
        }
    }
    
    
}


